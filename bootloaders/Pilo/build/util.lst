   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"util.c"
  14              		.section	.text.flashErase,"ax",%progbits
  15              		.align	1
  16              		.global	flashErase
  17              		.code	16
  18              		.thumb_func
  20              	flashErase:
  21              	.L2:
  22 0000 074B     		ldr	r3, .L8
  23 0002 9842     		cmp	r0, r3
  24 0004 0AD8     		bhi	.L7
  25 0006 074B     		ldr	r3, .L8+4
  26 0008 4208     		lsr	r2, r0, #1
  27 000a DA61     		str	r2, [r3, #28]
  28 000c 064A     		ldr	r2, .L8+8
  29 000e 1A80     		strh	r2, [r3]
  30              	.L4:
  31 0010 1A7D     		ldrb	r2, [r3, #20]
  32 0012 D107     		lsl	r1, r2, #31
  33 0014 FCD5     		bpl	.L4
  34 0016 0130     		add	r0, r0, #1
  35 0018 FF30     		add	r0, r0, #255
  36 001a F1E7     		b	.L2
  37              	.L7:
  38              		@ sp needed
  39 001c 7047     		bx	lr
  40              	.L9:
  41 001e C046     		.align	2
  42              	.L8:
  43 0020 FFFF0300 		.word	262143
  44 0024 00400041 		.word	1090535424
  45 0028 02A5FFFF 		.word	-23294
  47              		.section	.text.flashWrite,"ax",%progbits
  48              		.align	1
  49              		.global	flashWrite
  50              		.code	16
  51              		.thumb_func
  53              	flashWrite:
  54 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  55 0002 8008     		lsr	r0, r0, #2
  56              	.L11:
  57 0004 0028     		cmp	r0, #0
  58 0006 19D0     		beq	.L24
  59 0008 0D4C     		ldr	r4, .L25
  60 000a 0E4B     		ldr	r3, .L25+4
  61 000c 251C     		mov	r5, r4
  62 000e 2380     		strh	r3, [r4]
  63              	.L13:
  64 0010 2B7D     		ldrb	r3, [r5, #20]
  65 0012 DE07     		lsl	r6, r3, #31
  66 0014 FCD5     		bpl	.L13
  67 0016 0023     		mov	r3, #0
  68              	.L19:
  69 0018 9E00     		lsl	r6, r3, #2
  70 001a 8F59     		ldr	r7, [r1, r6]
  71 001c 0133     		add	r3, r3, #1
  72 001e 9751     		str	r7, [r2, r6]
  73 0020 102B     		cmp	r3, #16
  74 0022 01D0     		beq	.L14
  75 0024 8342     		cmp	r3, r0
  76 0026 F7D1     		bne	.L19
  77              	.L14:
  78 0028 074E     		ldr	r6, .L25+8
  79 002a 2680     		strh	r6, [r4]
  80              	.L17:
  81 002c 2C7D     		ldrb	r4, [r5, #20]
  82 002e E607     		lsl	r6, r4, #31
  83 0030 FCD5     		bpl	.L17
  84 0032 9C00     		lsl	r4, r3, #2
  85 0034 1219     		add	r2, r2, r4
  86 0036 0919     		add	r1, r1, r4
  87 0038 C01A     		sub	r0, r0, r3
  88 003a E3E7     		b	.L11
  89              	.L24:
  90              		@ sp needed
  91 003c F0BD     		pop	{r4, r5, r6, r7, pc}
  92              	.L26:
  93 003e C046     		.align	2
  94              	.L25:
  95 0040 00400041 		.word	1090535424
  96 0044 44A5FFFF 		.word	-23228
  97 0048 04A5FFFF 		.word	-23292
  99              		.section	.text.pinMux,"ax",%progbits
 100              		.align	1
 101              		.global	pinMux
 102              		.code	16
 103              		.thumb_func
 105              	pinMux:
 106 0000 70B5     		push	{r4, r5, r6, lr}
 107 0002 431C     		add	r3, r0, #1
 108 0004 1FD0     		beq	.L27
 109 0006 8402     		lsl	r4, r0, #10
 110 0008 E40F     		lsr	r4, r4, #31
 111 000a 8223     		mov	r3, #130
 112 000c 010C     		lsr	r1, r0, #16
 113 000e 6501     		lsl	r5, r4, #5
 114 0010 DB05     		lsl	r3, r3, #23
 115 0012 E401     		lsl	r4, r4, #7
 116 0014 4D1B     		sub	r5, r1, r5
 117 0016 E418     		add	r4, r4, r3
 118 0018 6319     		add	r3, r4, r5
 119 001a 4033     		add	r3, r3, #64
 120 001c 1E78     		ldrb	r6, [r3]
 121 001e 0122     		mov	r2, #1
 122 0020 1643     		orr	r6, r2
 123 0022 1E70     		strb	r6, [r3]
 124 0024 6B08     		lsr	r3, r5, #1
 125 0026 E318     		add	r3, r4, r3
 126 0028 3033     		add	r3, r3, #48
 127 002a 0A40     		and	r2, r1
 128 002c 1C78     		ldrb	r4, [r3]
 129 002e 9200     		lsl	r2, r2, #2
 130 0030 0F21     		mov	r1, #15
 131 0032 9140     		lsl	r1, r1, r2
 132 0034 8C43     		bic	r4, r1
 133 0036 1C70     		strb	r4, [r3]
 134 0038 C0B2     		uxtb	r0, r0
 135 003a 1978     		ldrb	r1, [r3]
 136 003c 9040     		lsl	r0, r0, r2
 137 003e 021C     		mov	r2, r0
 138 0040 0A43     		orr	r2, r1
 139 0042 D2B2     		uxtb	r2, r2
 140 0044 1A70     		strb	r2, [r3]
 141              	.L27:
 142              		@ sp needed
 143 0046 70BD     		pop	{r4, r5, r6, pc}
 145              		.section	.text.pinConfig,"ax",%progbits
 146              		.align	1
 147              		.global	pinConfig
 148              		.code	16
 149              		.thumb_func
 151              	pinConfig:
 152 0000 30B5     		push	{r4, r5, lr}
 153 0002 0123     		mov	r3, #1
 154 0004 941E     		sub	r4, r2, #2
 155 0006 C001     		lsl	r0, r0, #7
 156 0008 9C42     		cmp	r4, r3
 157 000a 01D9     		bls	.L33
 158 000c 002A     		cmp	r2, #0
 159 000e 11D1     		bne	.L34
 160              	.L33:
 161 0010 8225     		mov	r5, #130
 162 0012 1C1C     		mov	r4, r3
 163 0014 ED05     		lsl	r5, r5, #23
 164 0016 8C40     		lsl	r4, r4, r1
 165 0018 4319     		add	r3, r0, r5
 166 001a 5C60     		str	r4, [r3, #4]
 167 001c 022A     		cmp	r2, #2
 168 001e 01D1     		bne	.L35
 169 0020 9C61     		str	r4, [r3, #24]
 170 0022 05E0     		b	.L40
 171              	.L35:
 172 0024 0223     		mov	r3, #2
 173 0026 032A     		cmp	r2, #3
 174 0028 19D1     		bne	.L36
 175 002a 0F4A     		ldr	r2, .L41
 176 002c 8318     		add	r3, r0, r2
 177 002e 5C60     		str	r4, [r3, #4]
 178              	.L40:
 179 0030 0623     		mov	r3, #6
 180 0032 14E0     		b	.L36
 181              	.L34:
 182 0034 042A     		cmp	r2, #4
 183 0036 05D1     		bne	.L37
 184 0038 8224     		mov	r4, #130
 185 003a E405     		lsl	r4, r4, #23
 186 003c 8B40     		lsl	r3, r3, r1
 187 003e 0219     		add	r2, r0, r4
 188 0040 9361     		str	r3, [r2, #24]
 189 0042 05E0     		b	.L38
 190              	.L37:
 191 0044 052A     		cmp	r2, #5
 192 0046 03D1     		bne	.L38
 193 0048 074D     		ldr	r5, .L41
 194 004a 8B40     		lsl	r3, r3, r1
 195 004c 4219     		add	r2, r0, r5
 196 004e 5360     		str	r3, [r2, #4]
 197              	.L38:
 198 0050 8224     		mov	r4, #130
 199 0052 0122     		mov	r2, #1
 200 0054 E405     		lsl	r4, r4, #23
 201 0056 0319     		add	r3, r0, r4
 202 0058 8A40     		lsl	r2, r2, r1
 203 005a 9A60     		str	r2, [r3, #8]
 204 005c 0223     		mov	r3, #2
 205              	.L36:
 206 005e 034D     		ldr	r5, .L41+4
 207 0060 0918     		add	r1, r1, r0
 208 0062 4919     		add	r1, r1, r5
 209 0064 0B70     		strb	r3, [r1]
 210              		@ sp needed
 211 0066 30BD     		pop	{r4, r5, pc}
 212              	.L42:
 213              		.align	2
 214              	.L41:
 215 0068 10000041 		.word	1090519056
 216 006c 40000041 		.word	1090519104
 218              		.section	.text.isPinActive,"ax",%progbits
 219              		.align	1
 220              		.global	isPinActive
 221              		.code	16
 222              		.thumb_func
 224              	isPinActive:
 225 0000 8223     		mov	r3, #130
 226 0002 DB05     		lsl	r3, r3, #23
 227 0004 C001     		lsl	r0, r0, #7
 228 0006 C018     		add	r0, r0, r3
 229 0008 006A     		ldr	r0, [r0, #32]
 230 000a 0123     		mov	r3, #1
 231 000c 8B40     		lsl	r3, r3, r1
 232 000e 1840     		and	r0, r3
 233 0010 002A     		cmp	r2, #0
 234 0012 02D1     		bne	.L44
 235 0014 4342     		neg	r3, r0
 236 0016 5841     		adc	r0, r0, r3
 237 0018 01E0     		b	.L46
 238              	.L44:
 239 001a 431E     		sub	r3, r0, #1
 240 001c 9841     		sbc	r0, r0, r3
 241              	.L46:
 242 001e C0B2     		uxtb	r0, r0
 243              		@ sp needed
 244 0020 7047     		bx	lr
 246              		.section	.text.delayUs,"ax",%progbits
 247              		.align	1
 248              		.global	delayUs
 249              		.code	16
 250              		.thumb_func
 252              	delayUs:
 253 0000 064B     		ldr	r3, .L52
 254 0002 1A68     		ldr	r2, [r3]
 255 0004 064B     		ldr	r3, .L52+4
 256 0006 9A42     		cmp	r2, r3
 257 0008 01D1     		bne	.L48
 258 000a 0C23     		mov	r3, #12
 259 000c 5843     		mul	r0, r3
 260              	.L48:
 261 000e 0023     		mov	r3, #0
 262              	.L49:
 263 0010 8342     		cmp	r3, r0
 264 0012 01D0     		beq	.L51
 265 0014 0133     		add	r3, r3, #1
 266 0016 FBE7     		b	.L49
 267              	.L51:
 268              		@ sp needed
 269 0018 7047     		bx	lr
 270              	.L53:
 271 001a C046     		.align	2
 272              	.L52:
 273 001c 00000000 		.word	.LANCHOR0
 274 0020 006CDC02 		.word	48000000
 276              		.section	.text.systemReset,"ax",%progbits
 277              		.align	1
 278              		.global	systemReset
 279              		.code	16
 280              		.thumb_func
 282              	systemReset:
 283 0000 014A     		ldr	r2, .L56
 284 0002 024B     		ldr	r3, .L56+4
 285 0004 DA60     		str	r2, [r3, #12]
 286              	.L55:
 287 0006 FEE7     		b	.L55
 288              	.L57:
 289              		.align	2
 290              	.L56:
 291 0008 0400FA05 		.word	100270084
 292 000c 00ED00E0 		.word	-536810240
 294              		.section	.text.waitForSync,"ax",%progbits
 295              		.align	1
 296              		.global	waitForSync
 297              		.code	16
 298              		.thumb_func
 300              	waitForSync:
 301              	.L60:
 302 0000 024B     		ldr	r3, .L61
 303 0002 5A68     		ldr	r2, [r3, #4]
 304 0004 024B     		ldr	r3, .L61+4
 305 0006 1A42     		tst	r2, r3
 306 0008 FAD1     		bne	.L60
 307              		@ sp needed
 308 000a 7047     		bx	lr
 309              	.L62:
 310              		.align	2
 311              	.L61:
 312 000c 001C0040 		.word	1073748992
 313 0010 FD070000 		.word	2045
 315              		.global	SystemCoreClock
 316              		.section	.data.SystemCoreClock,"aw",%progbits
 317              		.align	2
 318              		.set	.LANCHOR0,. + 0
 321              	SystemCoreClock:
 322 0000 00093D00 		.word	4000000
 323              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20140228 (release) [ARM/embedded-4_8-br
DEFINED SYMBOLS
                            *ABS*:00000000 util.c
C:\cygwin\tmp\ccxFg0mA.s:15     .text.flashErase:00000000 $t
C:\cygwin\tmp\ccxFg0mA.s:20     .text.flashErase:00000000 flashErase
C:\cygwin\tmp\ccxFg0mA.s:43     .text.flashErase:00000020 $d
C:\cygwin\tmp\ccxFg0mA.s:48     .text.flashWrite:00000000 $t
C:\cygwin\tmp\ccxFg0mA.s:53     .text.flashWrite:00000000 flashWrite
C:\cygwin\tmp\ccxFg0mA.s:95     .text.flashWrite:00000040 $d
C:\cygwin\tmp\ccxFg0mA.s:100    .text.pinMux:00000000 $t
C:\cygwin\tmp\ccxFg0mA.s:105    .text.pinMux:00000000 pinMux
C:\cygwin\tmp\ccxFg0mA.s:146    .text.pinConfig:00000000 $t
C:\cygwin\tmp\ccxFg0mA.s:151    .text.pinConfig:00000000 pinConfig
C:\cygwin\tmp\ccxFg0mA.s:215    .text.pinConfig:00000068 $d
C:\cygwin\tmp\ccxFg0mA.s:219    .text.isPinActive:00000000 $t
C:\cygwin\tmp\ccxFg0mA.s:224    .text.isPinActive:00000000 isPinActive
C:\cygwin\tmp\ccxFg0mA.s:247    .text.delayUs:00000000 $t
C:\cygwin\tmp\ccxFg0mA.s:252    .text.delayUs:00000000 delayUs
C:\cygwin\tmp\ccxFg0mA.s:273    .text.delayUs:0000001c $d
C:\cygwin\tmp\ccxFg0mA.s:277    .text.systemReset:00000000 $t
C:\cygwin\tmp\ccxFg0mA.s:282    .text.systemReset:00000000 systemReset
C:\cygwin\tmp\ccxFg0mA.s:291    .text.systemReset:00000008 $d
C:\cygwin\tmp\ccxFg0mA.s:295    .text.waitForSync:00000000 $t
C:\cygwin\tmp\ccxFg0mA.s:300    .text.waitForSync:00000000 waitForSync
C:\cygwin\tmp\ccxFg0mA.s:312    .text.waitForSync:0000000c $d
C:\cygwin\tmp\ccxFg0mA.s:321    .data.SystemCoreClock:00000000 SystemCoreClock
C:\cygwin\tmp\ccxFg0mA.s:317    .data.SystemCoreClock:00000000 $d

NO UNDEFINED SYMBOLS
